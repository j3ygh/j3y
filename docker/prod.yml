version: "3.9"

services:
  certbot-letsencrypt:
    # Use official certbot base image to serve.
    # https://hub.docker.com/r/certbot/certbot/
    image: certbot/certbot
    # Prefix it with the project name for namespace.
    container_name: certbot-letsencrypt
    volumes:
      # Certbot put SSL certificate files in `/etc/letsencrypt`.
      # We want share this folder with our host & other containers.
      - certbot-letsencrypt:/etc/letsencrypt
    # We want certbot to run as `standalone` mode, which deal with `challange` with its own
    # built-in web server, instead of ours. And we pass all necessary arguments to run it
    # without console interactive. To learn more about these arguments:
    # https://certbot.eff.org/docs/using.html#certbot-command-line-options
    command:
      - certonly
      - --standalone
      - --domains
      - ${MY_DOMAINS}
      - --email
      - ${MY_EMAIL}
      - --agree-tos
      - --no-eff-email
      - --keep-until-expiring
    environment:
      - MY_DOMAINS=jimmylin.org
      - MY_EMAIL=b00502013@gmail.com
  nginx-proxy:
    # https://hub.docker.com/_/nginx
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      # Let Nginx output the result of executing `envsubst` to /etc/nginx/conf.d for serving.
      - ./nginx-proxy/volumes/templates:/etc/nginx/templates:ro
      # We want to share this folder with certbot to get SSL certificates files.
      - certbot-letsencrypt:/etc/letsencrypt:ro
    ports:
      - 80:80
      - 443:443
    environment:
      - SSL_CERTIFICATE_PATH=/etc/letsencrypt/live/${MY_DOMAINS}/fullchain.pem
      - SSL_CERTIFICATE_KEY_PATH=/etc/letsencrypt/live/${MY_DOMAINS}/privkey.pem
      - CERBOT_HOST=http://certbot-letsencrypt
      - WEB_HOST=http://node-web
      - WEB_PORT=3000
  node-web:
    build:
      context: ../
      dockerfile: ./docker/services/node-web/Dockerfile
    image: j3ydocker/j3y-node-web:latest
    container_name: node-web
  postgres-db:
    # https://hub.docker.com/_/postgres
    image: postgres:alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
    name: postgres-data
  certbot-letsencrypt:
    name: letsencrypt
