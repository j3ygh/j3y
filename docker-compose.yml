services:
  frontend:
    build:
      context: .
      dockerfile: ./dockerfiles/frontend/Dockerfile
  proxy:
    # Use official Nginx base image to serve. The `alpine` version make the container smaller.
    # https://hub.docker.com/_/nginx
    image: nginx:alpine
    volumes:
      # The files in /etc/nginx/templates/*.template would be read and outputed the result 
      # of executing envsubst to /etc/nginx/conf.d for serving.
      - ./dockerfiles/proxy/templates:/etc/nginx/templates:ro
      # We want share this folder with certbot to get SSL certificates files.
      - ./dockerfiles/shared/letsencrypt:/etc/letsencrypt:ro
    ports:
      - 80:80
      - 443:443
      # We pass these environment variables as is. You can just declare them on your host,
      # but usually you want to do this with a `./.env` beside this file.
    environment:
      - SSL_CERTIFICATE_PATH
      - SSL_CERTIFICATE_KEY_PATH
      - CERBOT_HOST
      - OTHER_HOST
  certbot:
    # Use official certbot base image to serve.
    # https://hub.docker.com/r/certbot/certbot/
    image: certbot/certbot
    # Certbot put SSL certificate files in `/etc/letsencrypt`.
    # We want share this folder with our host & other containers.
    volumes:
      - ./dockerfiles/shared/letsencrypt:/etc/letsencrypt
    # We want certbot to run as `standalone` mode, which deal with `challange` with its own
    # built-in web server, instead of ours. And we pass all necessary arguments to run it
    # without console interactive. To learn more about these arguments:
    # https://certbot.eff.org/docs/using.html#certbot-command-line-options
    command:
      - certonly
      - --standalone
      - --domains
      - ${MY_DOMAINS}
      - --email
      - ${MY_EMAIL}
      - --agree-tos
      - --no-eff-email
      - --keep-until-expiring
